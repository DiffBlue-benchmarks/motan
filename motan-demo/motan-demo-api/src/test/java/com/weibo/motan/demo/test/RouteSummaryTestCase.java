package io.grpc.examples.routeguide;

import com.diffblue.deeptestutils.Reflector;
import io.grpc.examples.routeguide.RouteSummary;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.runner.RunWith;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

import java.lang.reflect.InvocationTargetException;

@RunWith(PowerMockRunner.class)
public class RouteSummaryTestCase {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: RouteSummary */
  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 179 branch to line 181
   *  - conditional line 182 branch to line 184
   *  - conditional line 186 branch to line 188
   *  - conditional line 190 branch to line 192
   *  - conditional line 194 branch to line 196
   */
  @PrepareForTest({com.google.protobuf.CodedOutputStream.class})
  @Test
  public void getSerializedSizeOutputZero3() throws Exception, InvocationTargetException {

    // Setup mocks
    org.powermock.api.mockito.PowerMockito.mockStatic(com.google.protobuf.CodedOutputStream.class);

    // Arrange
    RouteSummary objectUnderTest =
        ((RouteSummary)Reflector.getInstance("io.grpc.examples.routeguide.RouteSummary"));
    Reflector.setField(objectUnderTest, "featureCount_", 1);
    Reflector.setField(objectUnderTest, "memoizedHashCode", 0);
    Reflector.setField(objectUnderTest, "elapsedTime_", 1);
    Reflector.setField(objectUnderTest, "memoizedIsInitialized", (byte)0);
    Reflector.setField(objectUnderTest, "unknownFields", null);
    Reflector.setField(objectUnderTest, "distance_", 1);
    Reflector.setField(objectUnderTest, "memoizedSize", -1);
    Reflector.setField(objectUnderTest, "pointCount_", 1);
    org.mockito.Mockito
        .when(com.google.protobuf.CodedOutputStream.computeInt32Size(org.mockito.Matchers.anyInt(),
                                                                     org.mockito.Matchers.anyInt()))
        .thenReturn(0)
        .thenReturn(0)
        .thenReturn(0)
        .thenReturn(0);

    // Act
    int retval = objectUnderTest.getSerializedSize();

    // Assert result
    Assert.assertEquals(0, retval);
  }
}
