package com.weibo.api.motan.registry.consul.client;

import com.diffblue.deeptestutils.Reflector;
import com.ecwid.consul.v1.agent.model.NewService.Check;
import com.ecwid.consul.v1.agent.model.NewService;
import com.weibo.api.motan.registry.consul.ConsulService;
import com.weibo.api.motan.registry.consul.client.ConsulEcwidClient;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.runner.RunWith;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

@RunWith(PowerMockRunner.class)
public class ConsulEcwidClientTestCase {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: ConsulEcwidClient */
  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers the entire method.
   */
  @PrepareForTest({com.weibo.api.motan.registry.consul.client.ConsulEcwidClient.class})
  @Test
  public void convertServiceInputNotNullOutputNotNull()
      throws Exception, NoSuchMethodException, IllegalAccessException, InvocationTargetException {

    // Arrange
    ConsulEcwidClient objectUnderTest = ((ConsulEcwidClient)Reflector.getInstance(
        "com.weibo.api.motan.registry.consul.client.ConsulEcwidClient"));
    objectUnderTest.host = null;
    objectUnderTest.port = 0;
    ConsulService service =
        ((ConsulService)Reflector.getInstance("com.weibo.api.motan.registry.consul.ConsulService"));
    Reflector.setField(service, "name", null);
    Reflector.setField(service, "id", null);
    Reflector.setField(service, "port", 0);
    Reflector.setField(service, "ttl", 0L);
    Reflector.setField(service, "tags", null);
    Reflector.setField(service, "address", null);
    Check check = ((Check)org.mockito.Mockito.mock(Check.class));
    org.powermock.api.mockito.PowerMockito
        .whenNew(com.ecwid.consul.v1.agent.model.NewService.Check.class)
        .withAnyArguments()
        .thenReturn(check);
    NewService newService = ((NewService)org.mockito.Mockito.mock(NewService.class));
    org.powermock.api.mockito.PowerMockito.whenNew(com.ecwid.consul.v1.agent.model.NewService.class)
        .withAnyArguments()
        .thenReturn(newService);

    // Act
    Class<?> c = Reflector.forName("com.weibo.api.motan.registry.consul.client.ConsulEcwidClient");
    Method m = c.getDeclaredMethod(
        "convertService", Reflector.forName("com.weibo.api.motan.registry.consul.ConsulService"));
    m.setAccessible(true);
    com.ecwid.consul.v1.agent.model.NewService retval =
        (com.ecwid.consul.v1.agent.model.NewService)m.invoke(objectUnderTest, service);

    // Assert result
    Assert.assertNotNull(retval);
  }
}
