package com.weibo.api.motan.cluster.support;

import com.diffblue.deeptestutils.Reflector;
import com.weibo.api.motan.cluster.ha.FailfastHaStrategy;
import com.weibo.api.motan.cluster.support.ClusterSpi;
import com.weibo.api.motan.rpc.URL;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import java.lang.reflect.Array;
import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;

public class ClusterSpiTestCase {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: ClusterSpi */
  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 62 branch to line 62
   *  - conditional line 62 branch to line 63
   */

  @Test
  public void getInterfaceOutputNull7() throws InvocationTargetException {

    // Arrange
    ClusterSpi objectUnderTest =
        ((ClusterSpi)Reflector.getInstance("com.weibo.api.motan.cluster.support.ClusterSpi"));
    URL uRL = ((URL)Reflector.getInstance("com.weibo.api.motan.rpc.URL"));
    Reflector.setField(uRL, "protocol", null);
    Reflector.setField(uRL, "parameters", null);
    Reflector.setField(uRL, "host", null);
    Reflector.setField(uRL, "port", 0);
    Reflector.setField(uRL, "numbers", null);
    Reflector.setField(uRL, "path", null);
    Reflector.setField(objectUnderTest, "url", uRL);
    FailfastHaStrategy failfastHaStrategy = ((FailfastHaStrategy)Reflector.getInstance(
        "com.weibo.api.motan.cluster.ha.FailfastHaStrategy"));
    Reflector.setField(failfastHaStrategy, "url", null);
    Reflector.setField(objectUnderTest, "haStrategy", failfastHaStrategy);
    ArrayList arrayList = new ArrayList();
    Reflector.setField(objectUnderTest, "referers", arrayList);
    Reflector.setField(objectUnderTest, "available", null);
    Reflector.setField(objectUnderTest, "loadBalance", null);

    // Act
    Class retval = objectUnderTest.getInterface();

    // Assert result
    Assert.assertEquals(null, retval);
  }
}
