package com.weibo.api.motan.util;

import com.alibaba.fastjson.JSONObject;
import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.runner.RunWith;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

import java.lang.reflect.InvocationTargetException;

@RunWith(PowerMockRunner.class)
public class ExceptionUtilTestCase {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: ExceptionUtil */
  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 74 branch to line 79
   *  - conditional line 79 branch to line 84
   *  - conditional line 84 branch to line 93
   *  - conditional line 93 branch to line 93
   */
  @PrepareForTest({com.weibo.api.motan.util.ExceptionUtil.class})
  @Test
  public void toMessageInputNotNullOutputNull() throws Exception, InvocationTargetException {

    // Arrange
    Exception e = ((Exception)Reflector.getInstance("java.lang.Exception"));
    Reflector.setField(e, "detailMessage", null);
    Reflector.setField(e, "cause", null);
    JSONObject jSONObject = ((JSONObject)org.mockito.Mockito.mock(JSONObject.class));
    org.mockito.Mockito
        .when(
            ((com.alibaba.fastjson.JSONObject)jSONObject)
                .put(org.mockito.AdditionalMatchers.or(org.mockito.Matchers.isA(String.class),
                                                       org.mockito.Matchers.isNull(String.class)),
                     org.mockito.AdditionalMatchers.or(org.mockito.Matchers.isA(Object.class),
                                                       org.mockito.Matchers.isNull(Object.class))))
        .thenReturn(0)
        .thenReturn(0)
        .thenReturn(0);
    org.mockito.Mockito.when(((com.alibaba.fastjson.JSONObject)jSONObject).toString())
        .thenReturn(null);
    org.powermock.api.mockito.PowerMockito.whenNew(com.alibaba.fastjson.JSONObject.class)
        .withAnyArguments()
        .thenReturn(jSONObject);

    // Act
    String retval = com.weibo.api.motan.util.ExceptionUtil.toMessage(e);

    // Assert result
    Assert.assertEquals(null, retval);
  }
}
